#include <string>
#include <vector>
#include <algorithm>
#define INF 2147483647
using namespace std;

int solution(int n, vector<vector<int>> results) {
    int answer = 0;

    vector<vector<int>> floyd(n, vector<int>(n, 0));
    //for (int i = 0; i < n; i++) floyd[i][i] = 0;

    for (int i = 0; i < results.size(); i++) {
        int x = results[i][0];
        int y = results[i][1];
        x--;
        y--;
        floyd[x][y] = 1;
        floyd[y][x] = -1;
    }

    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (floyd[i][k]==1 && floyd[k][j]==1 ) {
                    floyd[i][j] = 1;
                }
                else if (floyd[i][k]==-1 && floyd[k][j]==-1) {
                    floyd[i][j] = -1;
                }
            }
        }
    }

    for (int i = 0; i < n; i++) {
        if (count(floyd[i].begin(), floyd[i].end(), 0) == 1) answer++;
    }

    return answer;
}
int main() {
    solution(5, { {4, 3},{4, 2},{3, 2},{1, 2},{2, 5} });
}