#include <iostream>
#include <vector>
using namespace std;

int solution(int n, vector<int> stations, int w)
{
    int answer = 0;
    vector<pair<int,int>> range;
    for(int i=0;i<stations.size();i++){
        int start = stations[i]-w<1?1:stations[i]-w;
        int end = stations[i]+w>n?n:stations[i]+w;
        if(range.size()==0) {            
            range.push_back({start,end});
            continue;
        }
        
        if(range.back().second>=start){
            start = range.back().first;
            range.pop_back();
            range.push_back({start,end});
        }
        else range.push_back({start,end});
    }
    range.push_back({n+1,-1});
    
    int coverStart=1;
    for(int i=0;i<range.size();i++){
        int coverRange = range[i].first - coverStart;
        answer += coverRange/(w*2+1);
        if(coverRange % (w*2+1) !=0) answer++;
        coverStart = range[i].second+1;
    }
    
    return answer;
}