#include <iostream>
#include <vector>
#include <queue>
#include <stack>
#include <string>
using namespace std;

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    string s;
    int ans = 0;
    int n, l = 0, r = 0;
    int includesCnt = 0;
    int alphaCnt[26];
    cin >> n >> s;

    fill(alphaCnt, alphaCnt + 26, 0);

    while (l <= r && r<s.size()) {
        int alphaR = s[r++] - 'a';
        alphaCnt[alphaR]++;
        
        if (alphaCnt[alphaR] == 1) {
            includesCnt++;
        }

        while (includesCnt > n) {
            int alphaL = s[l++] - 'a';
            alphaCnt[alphaL]--;

            if (alphaCnt[alphaL] == 0) {
                includesCnt--;
            }
        }
        ans = max(ans, r - l);
    }

    cout << ans;

    return 0;
}