#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <cmath>
#include <string>
using namespace std;
vector<int> stack[4];
vector<int> arr;
int n;

void input() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		int t;
		cin >> t;
		arr.push_back(t);
	}
}

string solve() {
	input();
	for (int i = 0; i < arr.size(); i++) {
		int val = arr[i];

		bool ok = false;
		for (int j = 0; j < 4; j++) {
			if (stack[j].size() != 0 && stack[j].back() < val) {
				stack[j].push_back(val);
				ok = true;
				break;
			}
		}

		if (!ok) {
			for (int j = 0; j < 4; j++) {
				if (stack[j].size() == 0) {
					stack[j].push_back(val);
					ok = true;
					break;
				}
			}
		}
		if (!ok) return "NO";
	}

	return "YES";
}

int main() {
	cout<<solve();
}


// LIS - 풀이 참고
// NlogN LIS 로 생각해도 되겠구나.. 
#include <bits/stdc++.h>
using namespace std;

const int MAX = 100007;
int S[MAX];

int main() {
	ios::sync_with_stdio(0); cin.tie(0);
	int N;
	cin >> N;
	for (int i = 1; i <= N; ++i) cin >> S[i];
	vector<int> LIS;
	for (int i = 1; i <= N; ++i) {
		if (LIS.empty() || LIS.back() < -S[i]) LIS.push_back(-S[i]);
		else *lower_bound(LIS.begin(), LIS.end(), -S[i]) = -S[i];
	}
	cout << (LIS.size() <= 4 ? "YES" : "NO");
	return 0;
}
